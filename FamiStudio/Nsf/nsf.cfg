MEMORY 
{
	HEADER: start = $0, size = $80, file = %O, fill = yes;
	ZEROPAGE: start = $00, size = $100, type = rw;
	STACK: start = $0100, size = $100; 
	RAM: start = $0200, size = $500;
	EXRAM: start = $5c00, size = $400;
	SONG_DATA: start = $10000 - ({CODEBANKS} * $1000), size = $100;
	CODE_INIT: start = $10100 - ({CODEBANKS} * $1000), size = $60, file = %O ,fill = yes;
	CODE_PLAY: start = $10160 - ({CODEBANKS} * $1000), size = $20, file = %O ,fill = yes;
	CODE: start = $10180 - ({CODEBANKS} * $1000), size = ({CODEBANKS} * $1000) - $186, file = %O ,fill = yes; # Minus 6 for vectors.
	VECTORS: start = $fffa, size = $6, file = %O, fill = yes;
}

SEGMENTS 
{
	HEADER: load = HEADER, type = ro;
	ZEROPAGE: load = ZEROPAGE, type = zp;
	RAM: load = RAM, type = bss, optional = yes, align = $100;
	EXRAM: load = EXRAM, type = bss, optional = yes, align = $100;
	SONG_DATA: load = SONG_DATA, type = ro, align = $100;
	CODE_INIT: load = CODE_INIT, type = ro, align = $100;
	CODE_PLAY: load = CODE_PLAY, type = ro;
	CODE: load = CODE, type = ro, align = $80;
	VECTORS: load = VECTORS, type = ro;
}
